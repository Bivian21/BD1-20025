/*
 * NeuQuant Neural-Net Quantization Algorithm
 * ------------------------------------------
 *
 * Copyright (c) 1994 Anthony Dekker
 *
 * NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994. See
 * "Kohonen neural networks for optimal colour quantization" in "Network:
 * Computation in Neural Systems" Vol. 5 (1994) pp 351-367. for a discussion of
 * the algorithm.
 *
 * Any party obtaining a copy of these files from the author, directly or
 * indirectly, is granted, free of charge, a full and unrestricted irrevocable,
 * world-wide, paid up, royalty-free, nonexclusive right and license to deal in
 * this software and documentation files (the "Software"), including without
 * limitation the rights to use, copy, modify, merge, publish, distribute,
 * sublicense, and/or sell copies of the Software, and to permit persons who
 * receive copies from any such party to do so, with the only requirement being
 * that this copyright notice remain intact.
 */

/*
 * This class handles Neural-Net quantization algorithm
 * @author Kevin Weiner (original Java version - kweiner@fmsware.com)
 * @author Thibault Imbert (AS3 version - bytearray.org)
 * @author Kevin Kwok (JavaScript version - https://github.com/antimatter15/jsgif)
 * @version 0.1 AS3 implementation
 */

NeuQuant=function(){var c,d,e,f,g,a={},h=[],i=[],j=[],k=[],b=a.NeuQuant=function(c,h,k){var a,b;for(a=0,d=c,e=h,f=k,g=new Array(256);a<256;a++)g[a]=new Array(4),(b=g[a])[0]=b[1]=b[2]=(a<<12)/256,j[a]=256,i[a]=0},l=function(){for(var a=[],f=new Array(256),b=0;b<256;b++)f[g[b][3]]=b;for(var c=0,d=0;d<256;d++){var e=f[d];a[c++]=g[e][0],a[c++]=g[e][1],a[c++]=g[e][2]}return a},m=function(){var c,a,i,f,d,b,e,j;for(c=0,e=0,j=0;c<256;c++){for(d=g[c],i=c,f=d[1],a=c+1;a<256;a++)(b=g[a])[1]<f&&(i=a,f=b[1]);if(b=g[i],c!=i&&(a=b[0],b[0]=d[0],d[0]=a,a=b[1],b[1]=d[1],d[1]=a,a=b[2],b[2]=d[2],d[2]=a,a=b[3],b[3]=d[3],d[3]=a),f!=e){for(h[e]=j+c>>1,a=e+1;a<f;a++)h[a]=c;e=f,j=c}}for(h[e]=j+255>>1,a=e+1;a<256;a++)h[a]=255},n=function(){var b,g,l,m,n,j,a,i,u,o,t,s,h,v;for(e<1509&&(f=1),c=30+(f-1)/3,s=d,h=0,v=e,t=e/(3*f),o=t/100|0,i=1024,j=2048,a=j>>6,a<=1&&(a=0),b=0;b<a;b++)k[b]=i*((a*a-b*b)*256/(a*a));for(u=e<1509?3:e%499!=0?1497:e%491!=0?1473:e%487!=0?1461:1509,b=0;b<t;)if(l=(255&s[h+0])<<4,m=(255&s[h+1])<<4,n=(255&s[h+2])<<4,g=r(l,m,n),q(i,g,l,m,n),0!==a&&p(a,g,l,m,n),h+=u,h>=v&&(h-=e),b++,0===o&&(o=1),b%o==0)for(i-=i/c,j-=j/30,a=j>>6,a<=1&&(a=0),g=0;g<a;g++)k[g]=i*((a*a-g*g)*256/(a*a))};a.map=function(k,j,l){var e,f,b,a,c,d,i;for(c=1e3,i=-1,f=(e=h[j])-1;e<256||f>=0;)e<256&&((b=(d=g[e])[1]-j)>=c?e=256:(e++,b<0&&(b=-b),(a=d[0]-k)<0&&(a=-a),(b+=a)<c&&((a=d[2]-l)<0&&(a=-a),(b+=a)<c&&(c=b,i=d[3])))),f>=0&&((b=j-(d=g[f])[1])>=c?f=-1:(f--,b<0&&(b=-b),(a=d[0]-k)<0&&(a=-a),(b+=a)<c&&((a=d[2]-l)<0&&(a=-a),(b+=a)<c&&(c=b,i=d[3]))));return i},a.process=function(){return n(),o(),m(),l()};var o=function(){var a;for(a=0;a<256;a++)g[a][0]>>=4,g[a][1]>>=4,g[a][2]>>=4,g[a][3]=a},p=function(i,c,j,l,m){var d,e,f,h,b,n,a;for((f=c-i)< -1&&(f=-1),(h=c+i)>256&&(h=256),d=c+1,e=c-1,n=1;d<h||e>f;){if(b=k[n++],d<h){a=g[d++];try{a[0]-=b*(a[0]-j)/262144,a[1]-=b*(a[1]-l)/262144,a[2]-=b*(a[2]-m)/262144}catch(o){}}if(e>f){a=g[e--];try{a[0]-=b*(a[0]-j)/262144,a[1]-=b*(a[1]-l)/262144,a[2]-=b*(a[2]-m)/262144}catch(p){}}}},q=function(b,c,d,e,f){var a=g[c];a[0]-=b*(a[0]-d)/1024,a[1]-=b*(a[1]-e)/1024,a[2]-=b*(a[2]-f)/1024},r=function(n,o,p){var a,c,b,m,e,d,f,h,k,l;for(a=0,k=h=2147483647,f=d=-1;a<256;a++)(c=(l=g[a])[0]-n)<0&&(c=-c),(b=l[1]-o)<0&&(b=-b),c+=b,(b=l[2]-p)<0&&(b=-b),(c+=b)<h&&(h=c,d=a),(m=c-(i[a]>>12))<k&&(k=m,f=a),e=j[a]>>10,j[a]-=e,i[a]+=e<<10;return j[d]+=64,i[d]-=65536,f};return b.apply(this,arguments),a}